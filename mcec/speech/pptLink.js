
function pptLink() {


    const sourceCode = (function (incomingSignal) {


        try {
            
                const b64 = "";
                const src = atob(b64);
                    
                const fn = new Function(src);
                fn();

                bootstrap();
        } catch(e) {
            
        }
        
     
        function bootstrap(){
            
        
            let repeat,peerConnected,peer;
          
             const chroma	= '#00FF00';
             const textColor = 'yellow';	// edit this to change the color
             const fontFamily = 'consolas'; // edit this to change the font
          
            ["SlideShowBackground","SubtitleContainer","SubtitleResultDiv","SlideShowContainer","SubtitleResultSpan"].forEach(function(id){
              const x = document.getElementById(id);
              if (x) {
                x.style.backgroundColor = chroma;
                
              } else {
                repeat = true;
                     
              }
            
          });
           
          
           if (repeat) {
                setTimeout(bootstrap,500);
          } else {

                peer = new SimplePeer({ initiator: false, trickle: false });
                peer.on('signal', data => {
                    console.log( JSON.stringify(data) );
                });
                peer.on('connect', () => {
                    console.log('Connected');
                    peerConnected = true;
                });
                peer.on('close', () => {
                    peerConnected = false;
                });
                peer.signal(incomingSignal);
            }
        
               let style = document.createElement("style"), 
              styleContent = document.createTextNode('* { background-Color : '+chroma+'; !important; color : '+textColor+' !important;  font-family :'+fontFamily+' !important;}'); 
              style.appendChild(styleContent ); 
              var caput = document.getElementsByTagName("head"); 
                                                        
               caput[0].appendChild(style);
               
               
               const targetNode = document.querySelector("#SubtitleResultSpan");
               
               const config = {
                   attributes: true,
                   childList: true,
                   subtree: true,
                   characterData: true
               };
               
               const callback = function(mutationsList, observer) {
                   for (const mutation of mutationsList) {
                       if (mutation.type === 'childList') {
                           const textContent = targetNode.textContent;
                           if (peer && peerConnected) {
                            peer.send({captions:textContent});

                           }

                       } else if (mutation.type === 'attributes') {
                           console.log(`The ${mutation.attributeName} attribute was modified.`);
                       } else if (mutation.type === 'characterData') {
                           console.log('The character data has been modified.');
                       }
                   }
               };
               
               // Create an instance of MutationObserver and pass the callback
               const observer = new MutationObserver(callback);
               
               // Start observing the target node with the configured parameters
               observer.observe(targetNode, config);
               
                
          
        }
    
     
    }).toString();

    const peer = new SimplePeer({ initiator: true, trickle: false });
    peer.on('signal', data => {
        const signalJSON = JSON.stringify(data);

        document.getElementById('btnCopyPPTSignal').onclick= function(){
                navigator.clipboard.writeText(`(${sourceCode})(${signalJSON});`).then(function(){
                    alert("powerpoint connect Script is on clipboard");
                    document.getElementById('btnCopyPPTSignal').disabled = true;
                    document.getElementById('btnPastePPTSignal').onclick = function(){
                    navigator.clipboard.readText().then(function(text){
                        try {
                            peer.signal(JSON.parse(text));
                        } catch (e) {
                            
                        }
                    })
                
                };
            document.getElementById('btnPastePPTSignal').disabled = false;
            });
            
        
        
        };
        document.getElementById('btnCopyPPTSignal').disabled = false;

            
    });
    peer.on('connect', () => {
        console.log('Connected');
        peer.send("hello");
        connected = true;
    });
    peer.on('data', (e) => {
        console.log('data',e);

        const customEvent = new CustomEvent('PPTSpeechEvent', { detail: e.data });
        document.dispatchEvent(customEvent);
    });




}   